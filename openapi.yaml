openapi: 3.0.0
info:
  title: Person Service API
  version: 1.0.0
  description: API для работы с пользователями и их данными

servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  /api/v1/countries:
    get:
      summary: Получить список стран
      operationId: getCountries
      responses:
        '200':
          description: Успешное получение списка стран
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
              example:
                - id: 1
                  name: "Россия"
                  alpha2: "RU"
                  alpha3: "RUS"
                  status: "ACTIVE"
                  created: "2024-01-01T00:00:00Z"
                  updated: "2024-01-01T00:00:00Z"
                - id: 2
                  name: "США"
                  alpha2: "US"
                  alpha3: "USA"
                  status: "ACTIVE"
                  created: "2024-01-01T00:00:00Z"
                  updated: "2024-01-01T00:00:00Z"
    post:
      summary: Создать новую страну
      operationId: createCountry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountryCreate'
            example:
              name: "Германия"
              alpha2: "DE"
              alpha3: "DEU"
              status: "ACTIVE"
      responses:
        '201':
          description: Страна успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
              example:
                id: 3
                name: "Германия"
                alpha2: "DE"
                alpha3: "DEU"
                status: "ACTIVE"
                created: "2024-01-01T00:00:00Z"
                updated: "2024-01-01T00:00:00Z"

  /api/v1/countries/{id}:
    get:
      summary: Получить страну по ID
      operationId: getCountryById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешное получение страны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
    put:
      summary: Обновить страну
      operationId: updateCountry
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountryCreate'
      responses:
        '200':
          description: Страна успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
    delete:
      summary: Удалить страну
      operationId: deleteCountry
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Страна успешно удалена

  /api/v1/addresses:
    get:
      summary: Получить список адресов
      operationId: getAddresses
      responses:
        '200':
          description: Успешное получение списка адресов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
              example:
                - id: "550e8400-e29b-41d4-a716-446655440000"
                  country_id: 1
                  address: "ул. Ленина, д. 1"
                  zip_code: "123456"
                  city: "Москва"
                  state: "Московская область"
                  created: "2024-01-01T00:00:00Z"
                  updated: "2024-01-01T00:00:00Z"
                  archived: null
    post:
      summary: Создать новый адрес
      operationId: createAddress
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressCreate'
            example:
              country_id: 1
              address: "ул. Ленина, д. 1"
              zip_code: "123456"
              city: "Москва"
              state: "Московская область"
      responses:
        '201':
          description: Адрес успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
              example:
                id: "550e8400-e29b-41d4-a716-446655440000"
                country_id: 1
                address: "ул. Ленина, д. 1"
                zip_code: "123456"
                city: "Москва"
                state: "Московская область"
                created: "2024-01-01T00:00:00Z"
                updated: "2024-01-01T00:00:00Z"

  /api/v1/addresses/{id}:
    get:
      summary: Получить адрес по ID
      operationId: getAddressById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Успешное получение адреса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
    put:
      summary: Обновить адрес
      operationId: updateAddress
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressCreate'
      responses:
        '200':
          description: Адрес успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
    delete:
      summary: Удалить адрес
      operationId: deleteAddress
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Адрес успешно удален

  /api/v1/users:
    get:
      summary: Получить список пользователей
      operationId: getUsers
      responses:
        '200':
          description: Успешное получение списка пользователей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              example:
                - id: "550e8400-e29b-41d4-a716-446655440000"
                  first_name: "Иван"
                  last_name: "Иванов"
                  status: "ACTIVE"
                  verified_at: "2024-01-01T00:00:00Z"
                  archived_at: null
                  created: "2024-01-01T00:00:00Z"
                  updated: "2024-01-01T00:00:00Z"
                  address_id: "550e8400-e29b-41d4-a716-446655440001"
    post:
      summary: Создать нового пользователя
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
            example:
              first_name: "Иван"
              last_name: "Иванов"
              status: "ACTIVE"
              address_id: "550e8400-e29b-41d4-a716-446655440001"
      responses:
        '201':
          description: Пользователь успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                id: "550e8400-e29b-41d4-a716-446655440000"
                first_name: "Иван"
                last_name: "Иванов"
                status: "ACTIVE"
                verified_at: "2024-01-01T00:00:00Z"
                archived_at: null
                created: "2024-01-01T00:00:00Z"
                updated: "2024-01-01T00:00:00Z"
                address_id: "550e8400-e29b-41d4-a716-446655440001"

  /api/v1/users/{id}:
    get:
      summary: Получить пользователя по ID
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Успешное получение пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      summary: Обновить статус верификации пользователя
      operationId: updateUserVerificationStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserVerificationUpdate'
            example:
              status: "VERIFIED"
              verified_at: "2024-01-01T00:00:00Z"
      responses:
        '200':
          description: Статус верификации успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Обновить пользователя
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          description: Пользователь успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Удалить пользователя
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Пользователь успешно удален

  /api/v1/individuals:
    get:
      summary: Получить список физических лиц
      operationId: getIndividuals
      responses:
        '200':
          description: Успешное получение списка физических лиц
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Individual'
              example:
                - id: "550e8400-e29b-41d4-a716-446655440000"
                  user_id: "550e8400-e29b-41d4-a716-446655440001"
                  passport_number: "1234567890"
                  phone_number: "+79123456789"
                  email: "ivan@example.com"
                  created: "2024-01-01T00:00:00Z"
                  updated: "2024-01-01T00:00:00Z"
    post:
      summary: Создать новое физическое лицо
      operationId: createIndividual
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualCreate'
            example:
              user_id: "550e8400-e29b-41d4-a716-446655440001"
              passport_number: "1234567890"
              phone_number: "+79123456789"
              email: "ivan@example.com"
      responses:
        '201':
          description: Физическое лицо успешно создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Individual'
              example:
                id: "550e8400-e29b-41d4-a716-446655440000"
                user_id: "550e8400-e29b-41d4-a716-446655440001"
                passport_number: "1234567890"
                phone_number: "+79123456789"
                email: "ivan@example.com"
                created: "2024-01-01T00:00:00Z"
                updated: "2024-01-01T00:00:00Z"

  /api/v1/individuals/{id}:
    get:
      summary: Получить физическое лицо по ID
      operationId: getIndividualById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Успешное получение физического лица
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Individual'
    put:
      summary: Обновить физическое лицо
      operationId: updateIndividual
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualCreate'
      responses:
        '200':
          description: Физическое лицо успешно обновлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Individual'
    delete:
      summary: Удалить физическое лицо
      operationId: deleteIndividual
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Физическое лицо успешно удалено

components:
  schemas:
    Country:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 32
        alpha2:
          type: string
          maxLength: 2
        alpha3:
          type: string
          maxLength: 3
        status:
          type: string
          maxLength: 32
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time

    CountryCreate:
      type: object
      required:
        - name
        - alpha2
        - alpha3
        - status
      properties:
        name:
          type: string
          maxLength: 32
        alpha2:
          type: string
          maxLength: 2
        alpha3:
          type: string
          maxLength: 3
        status:
          type: string
          maxLength: 32

    Address:
      type: object
      properties:
        id:
          type: string
          format: uuid
        country_id:
          type: integer
          format: int64
        address:
          type: string
          maxLength: 128
        zip_code:
          type: string
          maxLength: 32
        city:
          type: string
          maxLength: 32
        state:
          type: string
          maxLength: 32
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        archived:
          type: string
          format: date-time
          nullable: true

    AddressCreate:
      type: object
      required:
        - country_id
        - address
        - zip_code
        - city
      properties:
        country_id:
          type: integer
          format: int64
        address:
          type: string
          maxLength: 128
        zip_code:
          type: string
          maxLength: 32
        city:
          type: string
          maxLength: 32
        state:
          type: string
          maxLength: 32

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        first_name:
          type: string
          maxLength: 32
        last_name:
          type: string
          maxLength: 32
        status:
          type: string
          maxLength: 64
        verified_at:
          type: string
          format: date-time
        archived_at:
          type: string
          format: date-time
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        address_id:
          type: string
          format: uuid

    UserCreate:
      type: object
      required:
        - first_name
        - last_name
        - status
        - address_id
      properties:
        first_name:
          type: string
          maxLength: 32
        last_name:
          type: string
          maxLength: 32
        status:
          type: string
          maxLength: 64
        address_id:
          type: string
          format: uuid

    UserVerificationUpdate:
      type: object
      required:
        - status
        - verified_at
      properties:
        status:
          type: string
          maxLength: 64
        verified_at:
          type: string
          format: date-time

    Individual:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        passport_number:
          type: string
          maxLength: 32
        phone_number:
          type: string
          maxLength: 32
        email:
          type: string
          maxLength: 32
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time

    IndividualCreate:
      type: object
      required:
        - user_id
        - passport_number
        - phone_number
        - email
      properties:
        user_id:
          type: string
          format: uuid
        passport_number:
          type: string
          maxLength: 32
        phone_number:
          type: string
          maxLength: 32
        email:
          type: string
          maxLength: 32 